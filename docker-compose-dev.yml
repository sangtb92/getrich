version: '3.4'
services:
  users:
    container_name: users
    build:
      context: ./services/users
      dockerfile: Dockerfile-dev
    volumes:
      - './services/users:/usr/src/app'
    ports:
      - 5000
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
    depends_on:
      - users-db
    links:
      - users-db

  users-db:
    container_name: users-db
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 30s
        timeout: 30s
        retries: 3
#  nginx:
#    container_name: nginx
#    build:
#      context: ./services/nginx
#      dockerfile: Dockerfile
#    restart: always
#    ports:
#      - 80:80
#    depends_on:
#      - users

  postgrest:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    links:
      - users-db:users-db
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@users-db:5432/users_dev
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres #In production this role should not be the same as the one used for the connection
    depends_on:
      - users-db
    volumes:
      - "./pgdata:/var/lib/postgresql/data"

networks:
  default:
      external:
          name: test
