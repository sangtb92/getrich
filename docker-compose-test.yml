version: '3.4'
services:
  consul:
      image: progrium/consul:latest
      command: -server -bootstrap -ui-dir /ui
      healthcheck:
        test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8500 || exit 1"]
        interval: 5s
        retries: 10
      ports:
        - 8500:8500
      expose:
        - 53
        - 8300
        - 8301
        - 8302
        - 8400
        - 8500
      dns:
        - 127.0.0.1

  users-db:
    container_name: users-db
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 30s
        timeout: 30s
        retries: 3
  todo:
    container_name: todo
    build:
      context: services/todo
      dockerfile: Dockerfile-dev
    volumes:
      - './services/todo:/usr/src/app'
    ports:
      - 5000:5000
    expose:
      - 5000
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:5000/todos/ || exit 1"]
      interval: 5s
      retries: 10

  #http://postgrest.org/en/v5.1/
  postgrest:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    links:
      - users-db:users-db
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@users-db:5432/users_dev
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres #In production this role should not be the same as the one used for the connection
    depends_on:
      - users-db
    volumes:
      - "./pgdata:/var/lib/postgresql/data"

  nginx-lb:
    build: ./services/api-gateway/nginx/
    depends_on:
      - consul
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    expose:
      - 8000
      - 8443
      - 8001
      - 8444
    links:
      - consul:consul
    command: >
        /bin/containerpilot
        -config file:///etc/containerpilot/containerpilot.json
        nginx -g "daemon off;"

  kong-migration:
    image: kong
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=users-db
      - KONG_PG_PORT=kong
      - KONG_PG_USER=kong
      - KONG_PG_DATABASE=kong
    command: kong migrations up
    depends_on:
      - users-db

  kong:
    build: ./services/api-gateway/kong/
    depends_on:
      - users-db
      - kong-migration
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=users-db
      - KONG_PG_PORT=kong
      - KONG_PG_USER=kong
      - KONG_PG_DATABASE=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - 8009:8001
    expose:
      - 8000
      - 8001
      - 8443
      - 8444
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
      interval: 5s
      retries: 10

networks:
  default:
      external:
          name: test
